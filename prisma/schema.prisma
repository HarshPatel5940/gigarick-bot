generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Setting {
  id Int @id @default(1)

  activityType ActivityTextType @default(Playing)
  activityName String           @default("LOL Dobby")

  resetCheckins Boolean @default(false)

  checkinRewards          Int    @default(15)
  checkinTargetCount      Int    @default(90)
  checkinTargetRoleID     String @default("")
  checkinMinimumMsgLength Int    @default(25)
  checkinChannelID        String @default("")

  moderatorRoleID String @default("")
  teamRoleID      String @default("1236092244910407740")

  commandsChannelID String @default("")
  lectureChannelID  String @default("")
  lectureRewards    Int    @default(10)

  leaderboardMessageID String @default("")
  leaderboardChannelID String @default("")

  shopMessageID  String @default("")
  shopChannelID  String @default("")
  staffCHannelID String @default("1265956930833354772")

  oneEmojiPrice     Int @default(30)
  twoVipTicketPrice Int @default(250)
  three1v1Price     Int @default(300)
  fourVodPrice      Int @default(600)
  fiveBadgePrice    Int @default(1000)
  sixSubPrice       Int @default(1250)
  sevenFlipperPrice Int @default(1000)
  eigthHevinixPrice Int @default(1500)
  nineRpPrice       Int @default(2000)

  isLectureOngoing Boolean @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum ActivityTextType {
  Playing
  Streaming
  Listening
  Watching
  Competing
}

model Player {
  discordID  String @id
  discordTag String

  dobbyPoints   Int @default(0)
  checkinStreak Int @default(0)

  isCheckedIn Boolean @default(false)
  isClaimed   Boolean @default(false)

  bets PlayerBet[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Bet {
  id Int @id @default(autoincrement())

  isOpen Boolean @default(true)

  messageID  String? @unique
  channelID  String?
  messageUrl String?

  creatorID String

  title       String
  description String
  options     String[]
  amounts     Int[]

  winningOptionsIndices Int[]
  winningOptionsAmounts Float[]
  winnersText           String  @default("")

  bets PlayerBet[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model PlayerBet {
  id Int @id @default(autoincrement())

  player   Player @relation(fields: [playerID], references: [discordID], onDelete: Cascade)
  playerID String

  bet   Bet @relation(fields: [betID], references: [id], onDelete: Cascade)
  betID Int

  optionIndex Int
  amount      Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([betID, playerID])
}

model Item {
  id          Int     @id
  name        String
  title       String
  description String?
  role        String?
  price       Int
  emoji       String  @default("<:forex:1265969777462083646>")

  userMessage  String
  staffPing    String
  staffMessage String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
